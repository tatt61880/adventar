{ Quine in Kuin. @tatt61880 }
func main()
    func quine(str: []char)
        var s: []char :: ""
        for i(0, ^str - 1)
            var c: char :: str[i]
            switch(c)
            case '\n'
                do s :~ "\\n\" ~\n    | \""
            case '\\', '"'
                do s :~ ['\\', c]
            default
                do s :~ [c]
            end switch
        end for
        do cui@print("\{str ~ s}\"\n    do quine(str)\nend func\n")
    end func
    const str: []char :: "{ Quine in Kuin. @tatt61880 }\n" ~
    | "func main()\n" ~
    | "    func quine(str: []char)\n" ~
    | "        var s: []char :: \"\"\n" ~
    | "        for i(0, ^str - 1)\n" ~
    | "            var c: char :: str[i]\n" ~
    | "            switch(c)\n" ~
    | "            case '\\n'\n" ~
    | "                do s :~ \"\\\\n\\\" ~\\n    | \\\"\"\n" ~
    | "            case '\\\\', '\"'\n" ~
    | "                do s :~ ['\\\\', c]\n" ~
    | "            default\n" ~
    | "                do s :~ [c]\n" ~
    | "            end switch\n" ~
    | "        end for\n" ~
    | "        do cui@print(\"\\{str ~ s}\\\"\\n    do quine(str)\\nend func\\n\")\n" ~
    | "    end func\n" ~
    | "    const str: []char :: \""
    do quine(str)
end func

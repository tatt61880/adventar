var title: []char :: "Kuinで作る、はじめてのDAW制作"
var wndMain: wnd@Wnd 
const width: int :: 400
const height: int :: 100
var inputEdit: wnd@Edit
var tabOrder: wnd@TabOrder
var saveBtn: wnd@Btn
var resetBtn: wnd@Btn
const defaultInputStr: []char :: "7 6 7 6 7 2 5 3 0 0 0 0 0 0 0 0"

func main()
	do @wndMain :: wnd@makeWnd(null, %aspect, @width, @height, @title)
	do wnd@makeLabel(@wndMain, 5, 5, 290, 12, %fix, %fix, "音を数値で入力してください。スペース区切りです。")
	do @inputEdit :: wnd@makeEdit(@wndMain, 5, 30, @width - 10, 20, %scale, %fix)
	do @saveBtn :: wnd@makeBtn(@wndMain, 5, 60, 50, 20, %fix, %fix, "保存")
	do @resetBtn :: wnd@makeBtn(@wndMain, @width - 55, 60, 50, 20, %move, %fix, "リセット")
	do @resetBtn.onPush :: reset
	do @saveBtn.onPush :: save
	do @tabOrder :: wnd@makeTabOrder([@inputEdit $ wnd@WndBase, @saveBtn, @resetBtn])
	do reset(null)
	while(wnd@act())
	end while

	func reset(wnd: wnd@WndBase)
		do @inputEdit.setText(@defaultInputStr)
	end func

	func save(wnd: wnd@WndBase)
		var header: []bit8 :: [16#52b8, 16#49b8, 16#46b8, 16#46b8, 16#34b8, 16#B1b8, 16#02b8, 16#00b8, 16#57b8, 16#41b8, 16#56b8, 16#45b8, 16#66b8, 16#6Db8, 16#74b8, 16#20b8, 16#10b8, 16#00b8, 16#00b8, 16#00b8, 16#01b8, 16#00b8, 16#01b8, 16#00b8, 16#44b8, 16#ACb8, 16#00b8, 16#00b8, 16#44b8, 16#ACb8 , 16#00b8, 16#00b8, 16#01b8, 16#00b8, 16#08b8, 16#00b8, 16#64b8, 16#61b8, 16#74b8, 16#61b8, 16#10b8, 16#B1b8, 16#02b8, 16#00b8]
		var bin: []bit8 :: ##header
		var inputStr: []char :: @inputEdit.getText()
		var splittedStrs: [][]char :: inputStr.split(" ")
		var x: float :: 0.0
		for i(0, ^splittedStrs - 1)
			var key: int
			do splittedStrs[i].toInt(&key)
			for j(0, 44100 / 4)
				var a: int :: (lib@sin(x) * 127.0 + 128.0) $ int
				do bin :~ [a $ bit8]
				do x :+ 441.0 * 2.0 ^ (key $ float / 12.0) * 2.0 * lib@pi / 44100.0
			end for
		end for
		do saveWav(bin)
	end func

	func saveWav(bin: []bit8): bool
		var file: []char :: wnd@saveFileDialog(@wndMain, ["音声データ (*.wav)", "*.wav"], 0, "wav")
		if(file =& null)
			ret false
		end if
		if(!saveBin(file, bin))
			ret false
		end if
		func saveBin(path: []char, bin: []bit8): bool
			var filePtr: file@Writer :: file@makeWriter(path, false)
			if(filePtr =& null)
				do wnd@msgBox(@wndMain, "保存に失敗しました。\{path}", @title, %err, %ok)
				ret false
			end if
			do filePtr.write(bin)
			do filePtr.fin()
			ret true
		end func
	end func
end func

{ 数値を素因数分解した結果を出力します。 }
func main()
	do @primeFactorization(24) { 24 = 2^3*3 }
	do @primeFactorization(7) { 7 = 7 }
	do @primeFactorization(1024) { 1024 = 2^10 }
	do @primeFactorization(1224) { 1224 = 2^3*3^2*17 }
	do @primeFactorization(20171224) { 20171224 = 2^3*197*12799 }
	do @primeFactorization(61880) { 61880 = 2^3*5*7*13*17 }
end func

func primeFactorization(num: int)
	do cui@print("\{num} = ")
	var factors: []int :: math@primeFactors(num)
	var str: []char :: ""
	for i(0, ^factors - 1)
		do str :~ (^str = 0) ?("", "*")
		var n: int :: factors[i]
		do str :~ n.toStr()
		var count: int :: 1
		do i :+ 1
		while loop(i <> ^factors)
			if(factors[i] = n)
				do count :+ 1
				do i :+ 1
			else
				do i :- 1
				break loop
			end if
		end while
		if(count <> 1)
			do str :~ "^" ~ count.toStr()
		end if
	end for
	do cui@print(str ~ "\n")
end func
